-- Exercicios - All Together
-- Usando a tabela Employees do banco hr:

-- 1. Escreva uma query que exiba o maior sal√°rio da tabela.
	SELECT MAX(SALARY) AS 'Highest Salary' FROM hr.employees;

-- 2. üöÄ Escreva uma query que exiba a diferen√ßa entre o maior e o menor sal√°rio.
	SELECT MAX(SALARY) - MIN(SALARY) AS 'Salary Gap'
    FROM hr.employees;

-- 3. üöÄ Escreva uma query que exiba a m√©dia salarial de cada JOB_ID, ordenando pela m√©dia salarial em ordem decrescente.
	SELECT JOB_ID, AVG(SALARY) AS AVG_SALARY
    FROM hr.employees
    GROUP BY JOB_ID
    ORDER BY AVG(SALARY) DESC;

-- 4. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para realizar o pagamento de todas as pessoas funcion√°rias.
	SELECT SUM(SALARY) AS SUM_SALARY FROM hr.employees;

-- 5. üöÄ Escreva uma query que exiba quatro informa√ß√µes: o maior sal√°rio, o menor sal√°rio, a soma de todos os sal√°rios e a m√©dia dos sal√°rios. Todos os valores devem ser formatados para ter apenas duas casas decimais.
	SELECT
		MAX(SALARY),
        MIN(SALARY),
        SUM(SALARY),
        ROUND(AVG(SALARY), 2) AS AVG_SALARY
    FROM hr.employees;

-- 6. Escreva uma query que exiba a quantidade de pessoas que trabalham como pessoas programadoras (IT_PROG).
	SELECT COUNT(*) AS 'NUMBER OF IT_PROG'
	FROM hr.employees
    WHERE JOB_ID = 'IT_PROG';

-- 7. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para efetuar o pagamento de cada profiss√£o (JOB_ID).
	SELECT JOB_ID, SUM(SALARY) AS TOTAL_SALARY
    FROM hr.employees
    group by JOB_ID
    ORDER BY TOTAL_SALARY DESC;

-- 8. Utilizando a query anterior, fa√ßa as altera√ß√µes para que seja exibido somente a quantidade de dinheiro necess√°ria para cobrir a folha de pagamento das pessoas programadoras (IT_PROG).
	SELECT JOB_ID, SUM(SALARY) AS SUM_SALARY
    FROM hr.employees
    GROUP BY JOB_ID
    HAVING JOB_ID = 'IT_PROG';

-- 9. Escreva uma query que exiba em ordem decrescente a m√©dia salarial de todos os cargos, exceto das pessoas programadoras (IT_PROG).
	SELECT JOB_ID, AVG(SALARY) AS AVG_SALARY
    FROM hr.employees
    GROUP BY JOB_ID
    HAVING JOB_ID <> 'IT_PROG'
    ORDER BY AVG_SALARY DESC;

-- 10. üöÄ Escreva um query que exiba m√©dia salarial e o n√∫mero de funcion√°rios de todos os departamentos com mais de dez funcion√°rios. Dica: agrupe pelo DEPARTMENT_ID.
	SELECT 
		DEPARTMENT_ID,
		AVG(SALARY) AS AVG_SALARY,
        COUNT(*) AS NUMBER_OF_EMPLOYEES
    FROM hr.employees
    GROUP BY DEPARTMENT_ID
    HAVING NUMBER_OF_EMPLOYEES > 10;

-- 11. üöÄ Escreva uma query que atualize a coluna PHONE_NUMBER, de modo que todos os telefones iniciados por 515 agora devem iniciar com 777.


-- 12. Escreva uma query que s√≥ exiba as informa√ß√µes dos funcion√°rios cujo o primeiro nome tenha oito ou mais caracteres.


-- 13. Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e ano no qual foi contratado (exiba somente o ano).


-- 14. üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e dia do m√™s no qual foi contratado (exiba somente o dia).


-- 15. Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e m√™s no qual foi contratado (exiba somente o m√™s).


-- 16. Escreva uma query que exiba os nomes dos funcion√°rios em letra mai√∫scula.


-- 17: Escreva uma query que exiba o sobrenome e a data de contrata√ß√£o de todos os funcion√°rio contratados em julho de 1987.


-- 18: üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: nome, sobrenome, tempo que trabalha na empresa (em dias).